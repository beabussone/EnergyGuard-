version: "3.9"

# Stack completo EnergyGuard: pipeline dati, storage e interfacce.
services:
  # Broker Kafka single-node usato da simulatore e ingestion.
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - "9094:9094"
    networks:
      - energyguard

  # API centrale: sharding, configurazione soglie, notifiche SSE.
  coordinator:
    build:
      context: .
      dockerfile: Dockerfile.coordinator
    container_name: coordinator
    environment:
      - PORT=8000
      - REPLICATION_FACTOR=2
      - VIRTUAL_NODES=150
      - BOOTSTRAP_NODES=http://kv1:8100,http://kv2:8100,http://kv3:8100
      - ADMIN_TOKEN=eg-admin-token
    ports:
      - "8000:8000"
    depends_on:
      - kv1
      - kv2
      - kv3
    networks:
      - energyguard

  # Primo shard KVS (FastAPI + SQLite) montato su ./data/kv1.
  kv1:
    build:
      context: .
      dockerfile: Dockerfile.kvstore
    container_name: kv1
    environment:
      - PORT=8100
      - MAX_CACHE_ITEMS=20000
      - MAX_CACHE_SIZE_BYTES=0
      - SQLITE_PATH=/data/shard.db
    volumes:
      - ./data/kv1:/data
    ports:
      - "8101:8100"
    networks:
      - energyguard

  # Secondo shard KVS (replica identica, diversa cartella dati).
  kv2:
    build:
      context: .
      dockerfile: Dockerfile.kvstore
    container_name: kv2
    environment:
      - PORT=8100
      - MAX_CACHE_ITEMS=20000
      - MAX_CACHE_SIZE_BYTES=0
      - SQLITE_PATH=/data/shard.db
    volumes:
      - ./data/kv2:/data
    ports:
      - "8102:8100"
    networks:
      - energyguard

  # Terzo shard KVS per aumentare ridondanza e bilanciamento.
  kv3:
    build:
      context: .
      dockerfile: Dockerfile.kvstore
    container_name: kv3
    environment:
      - PORT=8100
      - MAX_CACHE_ITEMS=20000
      - MAX_CACHE_SIZE_BYTES=0
      - SQLITE_PATH=/data/shard.db
    volumes:
      - ./data/kv3:/data
    ports:
      - "8103:8100"
    networks:
      - energyguard

  # Container effimero che registra i nodi KVS presso il coordinator.
  register:
    image: curlimages/curl:8.10.1
    container_name: register
    depends_on:
      - coordinator
      - kv1
      - kv2
      - kv3
    entrypoint: ["/bin/sh","-c"]
    command: >
      "sleep 5 &&
       curl -s -X POST http://coordinator:8000/sharding/add-node/http://kv1:8100 &&
       curl -s -X POST http://coordinator:8000/sharding/add-node/http://kv2:8100 &&
       curl -s -X POST http://coordinator:8000/sharding/add-node/http://kv3:8100 &&
       tail -f /dev/null"
    networks:
      - energyguard

  # Consumer Kafka che scrive i dati grezzi nel KVS via coordinator.
  ingestion:
    build:
      context: .
      dockerfile: Dockerfile.ingestion
    container_name: ingestion
    depends_on:
      - kafka
      - coordinator
    command:
      - python
      - -u
      - ingestion_service.py
      - --kafka-bootstrap
      - kafka:9092
      - --coordinator-url
      - http://coordinator:8000
    networks:
      - energyguard

  # Servizio che legge le ultime letture, calcola anomalie e invia alert.
  anomaly_detector:
    build:
      context: .
      dockerfile: Dockerfile.anomaly
    container_name: anomaly_detector
    depends_on:
      - coordinator
      - kafka
    environment:
      - COORDINATOR_URL=http://coordinator:8000
      - KAFKA_BOOTSTRAP=kafka:9094
      - HISTORICAL_DB_PATH=/data/historical_readings.db
      - ANOM_K_SIGMA=1.6
      - ANOM_MIN_N=18
      - ANOM_THRESHOLD_MARGIN=0.0
      - STATS_REFRESH_SECS=900
      - DETECTOR_POLL_SECS=0.5
    volumes:
      - ./data:/data
      - ./src:/app/src
    networks:
      - energyguard
    restart: unless-stopped

  # Generatore di letture sintetiche che popola il topic Kafka.
  simulator:
    build:
      context: .
      dockerfile: Dockerfile.simulator
    container_name: simulator
    depends_on:
      - kafka
    command: >
      /bin/sh -lc "exec python -u src/sensor_simulator.py"
    environment:
      - SIM_KAFKA_BOOTSTRAP=kafka:9092
      - SIM_TOPIC=energyguard.readings
      - SIM_INTERVAL_SECONDS=5
      # ðŸ”§ Parametri di variabilitÃ  (puoi regolarli)
      - SIM_NOISE_KW_STD=1.4
      - SIM_NOISE_A_STD=0.45
      - SIM_NOISE_V_STD=4.5
      - SIM_BASELINE_JITTER_STD=0.35
      - SIM_BASE_KW_FLOOR1=6.0
      - SIM_BASE_KW_FLOOR2=6.6
      - SIM_BASE_KW_FLOOR3=7.2
      - SIM_AMP_PER_KW=2.8
      - SIM_AMP_SPIKE_COUPLING=0.05
      - SIM_OUTLIER_PROB=0.065
      - SIM_OUTLIER_SEQUENCE=kw,kw,a,v,kw,dkwh,v,a
      - SIM_OUTLIER_KW_FACTOR=3.0
      - SIM_OUTLIER_A_FACTOR=1.8
      - SIM_OUTLIER_V_BUMP=35
      - SIM_KWH_SPIKE_PROB=0.18
      - SIM_KWH_SPIKE_MULT=2.8
      - SIM_SHIFT_PROB=0.07
      - SIM_SHIFT_FACTOR=0.55
      - SIM_SHIFT_DURATION_MIN=160
      - SIM_SHIFT_DURATION_MAX=340
      - SIM_DRIFT_STEP_KW=0.16
      - SIM_DRIFT_STEP_V=0.7
      - SIM_BASE_VOLT=227.0
    volumes:
      - ./src:/app/src
    networks:
      - energyguard
    restart: unless-stopped

  # Front-end React/NGINX che visualizza consumi e alert in tempo reale.
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: webapp
    ports:
      - "3000:80"
    depends_on:
      - coordinator
    networks:
      - energyguard

  # Microservizio di login a supporto della webapp (form utente demo).
  login:
    build:
      context: ./webapp/login_service
      dockerfile: Dockerfile
    container_name: login
    environment:
      - PORT=7000
    ports:
      - "7001:7000"
    networks:
      - energyguard

networks:
  energyguard:
    driver: bridge


